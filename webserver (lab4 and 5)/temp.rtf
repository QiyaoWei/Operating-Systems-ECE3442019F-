{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //My other version that doesn\'92t require producer-consumer example in class\
\
int first_available(struct server* sv)\
\{\
	int i = 0;\
	while (i < sv -> max_requests && sv -> buffer[i] != -1)\
		i++;\
	return i;\
\}\
\
int first_occupied(struct server* sv)\
\{\
	int i = 0;\
	while (i < sv -> max_requests && sv -> buffer[i] == -1)\
		i++;\
	return i;\
\}\
\
void \
thread_stub(struct server* sv)\
\{\
	while (1)\{\
		pthread_mutex_lock(&buffer_lock);\
\
		while (first_occupied(sv) == sv -> max_requests)\{\
			if (sv -> exiting)\{\
				//\
				pthread_mutex_unlock(&buffer_lock);\
				pthread_exit(0);\
				return;\
			\}\
			pthread_cond_wait(&cv_consumer, &buffer_lock);	\
		\}\
\
		if (first_available(sv) == sv -> max_requests)\
			pthread_cond_broadcast(&cv_producer);\
\
		int j = sv -> buffer[first_occupied(sv)];\
		sv -> buffer[first_occupied(sv)] = -1;\
		pthread_mutex_unlock(&buffer_lock);\
		do_server_request(sv, j);\
	\}\
\
	pthread_exit(NULL);\
\}\
\
void\
server_request(struct server *sv, int connfd)\
\{\
	if (sv->nr_threads == 0) \{ /* no worker threads */\
		do_server_request(sv, connfd);\
	\} else \{\
		/*  Save the relevant info in a buffer and have one of the\
		 *  worker threads do the work. */\
		pthread_mutex_lock(&buffer_lock);\
\
		while (first_available(sv) == sv -> max_requests)\
			pthread_cond_wait(&cv_producer, &buffer_lock);\
\
		if (first_occupied(sv) == sv -> max_requests)\
			pthread_cond_signal(&cv_consumer);\
\
		sv -> buffer[first_available(sv)] = connfd;\
		pthread_mutex_unlock(&buffer_lock);\
	\}\
\}}